/* ========GERAL=================================== */

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    /* colors variables */
    --primary-color: hsl(170, 100%, 26%);
    --headline: hsl(210, 11%, 15%);
    --paragraph: hsl(210, 9%, 31%);

    --brand-beige: hsl(39, 100%, 97%);
    --brand-light: hsl(148, 23%, 89%);
    --brand-dark: hsl(170, 100%, 14%);

    --bg-light: hsl(180, 14%, 97%); 

    font-size: 62.5%; /*1rem = 10px*/

    --nav-height: 7.2rem;
}

html {
    scroll-behavior: smooth; /* mover o scroll suavemente */
}

html,
body {
    width: 100%;
    height: 100%;
}

body {
    font-family: 'DM Sans';
    font-size: 1.6rem;
    text-align: center;

    overflow: overlay; /* overlay sobrepoe o scroll fazendo com que o scroll seja contado dentro da largrua da página e nao adicionado aquela largura */

    background-color: var(-bg-light);
}

.wrapper {
    width: 37.5rem;
    margin-inline: auto;
    padding-inline: 2.4rem;
}

ul {
    list-style: none;
}

img {
    max-width: 100%;
}

section {
    padding-block: 10rem;
}

section header h4 {
    font-size: 1.4rem;  /*se uso o px, a minha unidade será fixa, se aumentar a tela, nao vai aumentar a fonte, por isso uso rem, que é relativa*/
    font-weight: 700;
    line-height: 150%;
    letter-spacing: 0.08rem;
    color: var(--primary-color);

    text-transform: uppercase;

    margin-bottom: 1.6rem;
}

section header h2 {
    font-size: 3rem;
    line-height: 3.9rem;

    color: var(--headline);
}

section header h1 {
    font-size: 3.4rem;
    color: var(--headline);
    line-height: 130%;

    margin-bottom: 2.4rem;
}

section .content p {
    font-weight: 400;
    font-size: 1.6rem;
    line-height: 150%;

    color: var(--paragraph);
}

.button {
    background: var(--primary-color);

    border: none;
    border-radius: 4rem;

    margin-bottom: 6rem;

    padding: 1.6rem 3.2rem;
    width: fit-content; /* fit-content a largura se adapta ao conteúdo e nao a caixa em si*/

    color: #fff;
    text-transform: uppercase;
    font-size: 1.4rem;
    font-weight: 700;

    display: flex; /* flex - pega um elemento e deixa ele um ao lado do outro */
    align-items: center;
    justify-content: center;

    gap: 1.6rem;



    text-decoration: none;

    transition: backgroun 200ms;
}

.button:hover {
    background-color: var(--brand-dark);
}

/* =========NAVIGATION===================================== */

nav {
    display: flex;/* passei o align e o justify para o nav.wrapper mas eu deixei o display flex aqui para que o logo doctor nao suba */
    height: var(--nav-height);

    position: fixed;
    top: 0;
    width: 100vw;

    z-index: 100;
}

nav .wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

nav.scroll {
    background: var(--primary-color);
}

nav.scroll .logo path{
    fill: white;   
}

nav.scroll button path {
    stroke: white;
}

nav button {
    background: none;
    border: none;
    cursor: pointer;
}

/* =========MENU - EXPANDIDO===================================== */
body.menu-expanded {
    overflow: hidden; /* para esconder as barras ao dar scroll e smente deixar a opcao de clicar no 'x' - close-menu */
}

body.menu-expanded > :not(nav) {
    display: hidden;
}

.menu,
.close-menu,
body.menu-expanded .open-menu {
    opacity: 0;
    visibility: hidden; /* em vez de esconder pelo JS eu posso esconder pelo css, com opacity e visibility, olhe o código de imediato de acima e abaixo*/
}

body.menu-expanded .menu,
body.menu-expanded .close-menu {
    opacity: 1;
    visibility: visible;
}

.menu {
    transform: translateY(100%);   /* Vai jogar o elemento para baixo no eixo vertical y, basicamente pegar o menu e jogar ele para fora da tela*/
}

body.menu-expanded .menu {
    position: fixed;
    top: 0;
    left: 0;
    background: var(--primary-color);

    width: 100vw;
    height: 100vh;

    padding-top: var(--nav-height);

    transition: transform 300ms; /*  faz aparecer de maneira suave, a transicao é feita com a transformacao em 300ms*/
 
    transform: translateY(0);   /* Vai jogar o elemento para cima no eixo vertical y, trazer o menu de volta para a tela*/
}

.menu ul:nth-child(1) {
    display: flex;
    flex-direction: column;
    gap: 4.8rem;

    margin-top: 6rem;

    font-weight: 700;
    font-size: 2.4rem;
    line-height: 3.1rem;
}

.menu ul li a {
    color: white;
    text-decoration: none;
}

.menu .button {
    background: #fff;
    border-radius: 4rem;
    font-weight: 700;
    font-size: 1.8rem;
    line-height: 2.3rem;
    text-transform: uppercase;
    text-decoration: none;                           

    color: var(--primary-color);

    display: inline-block;
    padding: 1.6rem 3.2rem;

    margin-top: 4.8rem;
    margin-bottom: 8rem;
}

.social-links {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 3.2rem;
}

body.menu-expanded .logo,
body.menu-expanded button 
{
    position: relative; /* position relative destrava o uso do z index */
    z-index: 100; /* qualquer valor, mas só é para ficar em cima */
}

body.menu-expanded .logo path{
    fill: white;   
}

body.menu-expanded button path {
    stroke: white;
}

/* =========HOME===================================== */
#home {
    padding-top: calc(4.1rem + var(--nav-height));
}

/* criando uma tag html pelo css usando uma pseudo-classe isso será para adicionar uma cor no fundo do header. Isso vai dar um efeito de que a imagem e o bloco de estatística tiveram um efeito de z-index:1, mas na verdad foi isso aqui que foi feito */
#home::before {
    content: "";
    width: 100%;
    height: calc(108rem + var(--nav-height));
    background-color: var(--brand-light);
    display: block;

    position:absolute;
    top: 0;
    left: 0;

    z-index: -1;
}

#home .button {
    margin-inline: auto;
}

#home p {
    font-size: 1.8rem;
    line-height: 150%;
    font-weight: 400;
    color: var(--paragraph);
    margin-bottom: 3.2rem;  
}

#home img {
    width: 26.4rem;
    display: block;
    margin-inline: auto;
    object-position: 0 2rem;   /* https://developer.mozilla.org/en-US/docs/Web/CSS/object-position       muda o alinhamento de um elemento dentro de uma caixa*/
}


#home .stats {
    width: 32.7rem;
    padding-block: 4rem; /* parecido com o margin-inline abaixo, mas aplicado ao padding, a diferenca é que mexe com top e bottom (uso isso em vez da altura)*/
    margin-inline: auto; /* isso é o eixo x - a margem referente ao left e ao right, poso usar isso, em vez de margin left e right */

    background: var(--brand-beige); /* background em vez de backgroun-color é um atalho */
    border: 1px solid var(--brand-light);
    border-radius: 0.6rem;

    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 6rem; /*só estou usando o gap em vez de margin e padding porque estou usando um display flex*/
}

#home .stat h3 {
    font-size: 4.8rem;
    color: var(--headline);
    line-height: 130%;

    margin-bottom: 0.4rem;
}

#home .stat p {
    margin: 0;
    color: var(--primary-color);
    line-height: 150%;
}


/* =========SERVICES===================================== */
#services header h2 {
    margin-bottom: 6rem;
}

#services .cards {
    display: flex;
    flex-direction: column;
    gap: 3.2rem; /* a ideia de aplicar o flex aqui é para destravar a propriedade gap para que eu possa colocar um espaco entre cada card*/
}

#services .card {
    padding: 2.4rem;
    text-align: left;

    background: #FFF;

    border: 1px solid var(--brand-light);
    border-radius: .6rem;
}

#services .card h3 {
    margin-block: 1.6rem;
}

/* =========SERVICES===================================== */
#about {
    text-align: left;
    background-color: var(--brand-beige);
}
#about header h2 {
    margin-bottom:2.4rem
}

#about .content p {
    margin-top: 2.4rem;
    margin-bottom: 6rem;
}

/* ========CONTACT=================================== */

#contact {
    text-align: left;
}

#contact header {
    margin-bottom: 3.2rem;
}

#contact ul {
    display: flex;
    flex-direction: column;
    gap: 1.6rem;

    margin-bottom: 3.2rem;
}

#contact ul li {
    display: flex;
    align-items: center;
    gap: 0.8rem ; /* em evz de usar margin e pading para tudo, só uso um gap, mas preciso ter o display flex ativado*/
}


/* 26min */
