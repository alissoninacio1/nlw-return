/*Todo o estilo foi feito primeiramente para mobile e depois foi dado um reset geral e feito o estilo para tablet, laptopt e desktop*/
/* ========GERAL=================================== */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    /* colors variables 
    fazer esta associacao com o hue,  e as variáveis hue dentro das cores, lhe permitirá fazer a troca das cores de toda a página
    */
    --hue: 170;
    --primary-color: hsl(var(--hue), 100%, 26%);
    --headline: hsl(210, 11%, 15%);
    --paragraph: hsl(210, 9%, 31%);

    --brand-beige: hsl(39, 100%, 97%);
    --brand-light: hsl(calc(var(--hue) - 32), 23%, 89%);  /*antes de colocar o calc, eu tinha 142 aqui, e a cor da varíavel hue era 170 (verde), entao para o cálculo, pego 170-142 = 32*/
    --brand-light-2: hsl(calc(var(--hue) + 10), 14%, 97%);
    --brand-dark: hsl(var(--hue), 100%, 14%);

    --bg-light: hsl(180, 14%, 97%); 

    font-size: 62.5%; /*estou usando 1rem = 10px*/

    --nav-height: 7.2rem;
}

html {
    scroll-behavior: smooth; /* mover o scroll suavemente */
}

html,
body {
    width: 100%;
    height: 100%;
}

body {
    font-family: 'DM Sans';
    font-size: 1.6rem;
    text-align: center;

    overflow: overlay; /* overlay sobrepoe o scroll fazendo com que o scroll seja contado dentro da largrua da página e nao adicionado aquela largura */

    background-color: var(-bg-light);
}

.wrapper {
    width: min(50rem, 100%);
    margin-inline: auto;
    padding-inline: 2.4rem;
}

ul {
    list-style: none;
}

img {
    max-width: 100%;
}

section {
    padding-block: 10rem;
}

section header h4 {
    font-size: 1.4rem;  /*se uso o px, a minha unidade será fixa, se aumentar a tela, nao vai aumentar a fonte, por isso uso rem, que é relativa*/
    font-weight: 700;
    line-height: 150%;
    letter-spacing: 0.08rem;
    color: var(--primary-color);

    text-transform: uppercase;

    margin-bottom: 1.6rem;
}

section header h2 {
    font-size: 3rem;
    line-height: 3.9rem;

    color: var(--headline);
}

section header h1 {
    font-size: 3.4rem;
    color: var(--headline);
    line-height: 130%;

    margin-bottom: 2.4rem;
}

section .content p {
    font-weight: 400;
    font-size: 1.6rem;
    line-height: 150%;

    color: var(--paragraph);
}

.button {
    background: var(--primary-color);

    border: none;
    border-radius: 4rem;

    margin-bottom: 6rem;

    padding: 1.6rem 3.2rem;
    width: fit-content; /* fit-content a largura se adapta ao conteúdo e nao a caixa em si*/

    color: #fff;
    text-transform: uppercase;
    font-size: 1.4rem;
    font-weight: 700;

    display: flex; /* flex - pega um elemento e deixa ele um ao lado do outro */
    align-items: center;
    justify-content: center;

    gap: 1.6rem;

    text-decoration: none;

    transition: backgroun 200ms;
}

.button:hover {
    background-color: var(--brand-dark);
}

.social-links {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 3.2rem;
}

/* custom colors */

#services .card circle {
    fill: var(--brand-light);  /* esta linha é para fazer referencia nas trocas de colores pela variável hue */
}

#navigation .logo path[fill*="#00856F"], /*vai no navigation, em logo, no path que tenha um fill (coloca o *=) que contenha o valor especificado*/
#backToTopButton circle {
    fill: var(--primary-color);
}

button.open-menu path[stroke*="#00856F"],
#contact li path {
    stroke: var(--primary-color);
}

body.menu-expanded #navigation .logo path,
#navigation.scroll .logo path {
    fill: white;
}

#navigation.scroll button.open-menu path[stroke*="#00856F"] {
    stroke: white;
}

/* =========NAVIGATION===================================== */
nav {
    display: flex;/* passei o align e o justify para o nav.wrapper mas eu deixei o display flex aqui para que o logo doctor nao suba */
    height: var(--nav-height);

    position: fixed;
    top: 0;
    width: 100vw;

    z-index: 100;
}

nav .wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

nav.scroll {
    background: var(--primary-color);
}

nav button {
    background: none;
    border: none;
    cursor: pointer;
}

nav .menu,
nav .close-menu {
    position: fixed;
}

/* =========MENU - EXPANDED===================================== */
body.menu-expanded {   /* quando o body tiver a classe menu-expanded, ver comentários para entender esta sintaxe */
    overflow: hidden; /* para esconder as barras ao dar scroll e smente deixar a opcao de clicar no 'x' - close-menu */
}

body.menu-expanded > :not(nav) {
    display: hidden;
}

.menu,
.close-menu,
body.menu-expanded .open-menu {
    opacity: 0;
    visibility: hidden; /* em vez de esconder pelo JS eu posso esconder pelo css, com opacity e visibility, olhe o código de imediato de cima e de baixo*/
}

body.menu-expanded .menu,
body.menu-expanded .close-menu {
    opacity: 1;
    visibility: visible;
}

.menu {
    transform: translateY(100%);   /* Vai jogar o elemento para baixo no eixo vertical y, basicamente pegar o menu e jogar ele para fora da tela*/
}

body.menu-expanded .menu {   /* reparei que quando os seletores estao assim: select.another em vez de select .another (quando estao sem espaco), é porque se usará JS com eles, ou seja, eles seao adicionados com JavaScript*/
    top: 0;
    left: 0;
    background: var(--primary-color);

    width: 100vw;
    height: 100vh;

    padding-top: var(--nav-height);

    transition: transform 300ms; /*  faz aparecer de maneira suave, a transicao é feita com a transformacao em 300ms*/
 
    transform: translateY(0);   /* Vai jogar o elemento para cima no eixo vertical y, trazer o menu de volta para a tela*/
}

.menu ul:nth-child(1) {
    display: flex;
    flex-direction: column;
    gap: 4.8rem;

    margin-top: 6rem;

    font-weight: 700;
    font-size: 2.4rem;
    line-height: 3.1rem;
}

.menu ul li a {
    color: white;
    text-decoration: none;
}

.menu .button {
    background: #fff;
    border-radius: 4rem;
    font-weight: 700;
    font-size: 1.8rem;
    line-height: 2.3rem;
    text-transform: uppercase;
    text-decoration: none;                           

    color: var(--primary-color);

    display: inline-block;
    padding: 1.6rem 3.2rem;

    margin-top: 4.8rem;
    margin-bottom: 8rem;
}

.menu .button:hover {
    background-color: var(--primary-color);
    color: #fff;

    filter: brightness(1.3); /* Los filtros se utilizan comúnmente para ajustar la representación de imágenes, fondos o bordes. */
}

body.menu-expanded .logo,
body.menu-expanded button 
{
    position: relative; /* position relative destrava o uso do z index */
    z-index: 100; /* qualquer valor, mas só é para ficar em cima */
}

body.menu-expanded .logo path{
    fill: white;   
}

body.menu-expanded button path {
    stroke: white;
}

/* =========HOME===================================== */
#home {
    padding-block: 0;
    padding-top: calc(4.1rem + var(--nav-height));
}

/* criando uma tag html pelo css usando uma pseudo-classe isso será para adicionar uma cor no fundo do header. Isso vai dar um efeito de que a imagem e o bloco de estatística tenham um efeito de z-index:1, mas na verdad foi isso aqui que foi feito */
#home::before {
    content: "";
    width: 100%;
    height: calc(76% + var(--nav-height));
    background-color: var(--brand-light);
    display: block;

    position:absolute;
    top: 0;
    left: 0;

    z-index: -1;
}

#home .button {
    margin-inline: auto;
}

#home p {
    font-size: 1.8rem;
    line-height: 150%;
    font-weight: 400;
    color: var(--paragraph);
    margin-bottom: 3.2rem;  
}

#home img {
    width: 26.4rem;
    display: block;
    margin-inline: auto;
    object-position: 0 2rem;   /* https://developer.mozilla.org/en-US/docs/Web/CSS/object-position       muda o alinhamento de um elemento dentro de uma caixa*/
}

#home .stats {
    width: 100%;
    padding-block: 4rem; /* parecido com o margin-inline abaixo, mas aplicado ao padding, a diferenca é que mexe com top e bottom (uso isso em vez da altura)*/
    margin-inline: auto; /* isso é o eixo x - a margem referente ao left e ao right, poso usar isso, em vez de margin left e right */

    background: var(--brand-beige); /* background em vez de backgroun-color é um atalho */
    border: 1px solid var(--brand-light);
    border-radius: 0.6rem;

    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 6rem; /*só estou usando o gap em vez de margin e padding porque estou usando um display flex*/
}

#home .stat h3 {
    font-size: 4.8rem;
    color: var(--headline);
    line-height: 130%;

    margin-bottom: 0.4rem;
}

#home .stat p {
    margin: 0;
    color: var(--primary-color);
    line-height: 150%;
}

/* =========SERVICES===================================== */
#services header h2 {
    margin-bottom: 6rem;
}

#services .cards {
    display: flex;
    flex-direction: column;
    gap: 3.2rem; /* a ideia de aplicar o flex aqui é para destravar a propriedade gap para que eu possa colocar um espaco entre cada card*/
}

#services .card {
    padding: 2.4rem;
    text-align: left;

    background: #FFF;

    border: 1px solid var(--brand-light);
    border-radius: .6rem;
}

#services .card h3 {
    margin-block: 1.6rem;
}

/* =========ABOUT===================================== */
#about {
    text-align: left;
    background-color: var(--brand-beige);
}
#about header h2 {
    margin-bottom:2.4rem
}

#about .content p {
    margin-top: 2.4rem;
    margin-bottom: 6rem;
}

/* ========CONTACT=================================== */
#contact {
    text-align: left;
}

#contact header {
    margin-bottom: 3.2rem;
}

#contact ul {
    display: flex;
    flex-direction: column;
    gap: 1.6rem;

    margin-bottom: 3.2rem;
}

#contact ul li {
    display: flex;
    align-items: center;
    gap: 0.8rem ; /* em vez de usar margin e pading para tudo, só uso um gap, mas preciso ter o display flex ativado*/
}

/* ========FOOTER=================================== */
footer {
    background-color: var(--primary-color);
    padding-block: 6rem;

    text-align: left;

    color: #fff;
}

footer .logo {
    display: inline-block;
    margin-bottom: 2.4rem;
}

footer .logo svg {
    width: 23.6rem;
    height: 3.1rem;
}

footer .logo path {
    fill: white;
}

footer p {
    color: var(--brand-beige);
    line-height: 2;
    margin-bottom: 3.2rem;
}

footer .social-links {
    justify-content: flex-start; /* para deixar alinhado no comeco, nos estilos gerais já está como display: flex, que serve para deixar os elementos um ao lado do outro*/
}

/* BACK TO TOP */
#backToTopButton {
    position: fixed;
    bottom: 1rem;   /* as propriedades top, bottom, right and left, sao liberadas ao usar o position seja ele - fixed, absolute, relative */
    right: 2.5rem;

    opacity: 0;
    visibility: hidden;

    transform: translateY(100%); /*tira o elemento da página, neste eixo*/
    transition:  200ms;
}

#backToTopButton.show {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);  /*traz de volta, neste eixo*/
}

/* ========RESPONSIVO=================================== */

@media (min-width: 1024px) { 
    /* quando tiver 1024px para cima, aplicar os seguintes códigos */

     /* ========GERAL=================================== */
    body {
        overflow: auto;
    }

    .wrapper {
        width: min(112rem, 100%);
        display: grid;
    }

    .col-a {
        grid-area: A;
    }

    .col-b {
        grid-area: B;
    }

    section {
        padding-block: 16rem;
    }

    section header h2 {
        font-size: 4rem;
        line-height: 5.2rem;
    }


    /* ========NAVIGATION=================================== */

    /* reset all config */
    nav#navigation .wrapper * {
        margin: 0;
        padding: 0;
        visibility: initial; /*initial - significa que eu pegarei o valor inicial antes de colocar css*/
        display: initial;
        opacity: initial;
        flex-direction: initial;
        position: initial;
        font-size: initial;
        font-weight: initial;
        transform: initial;
        color: initial;
        background-color: initial;
        filter: initial;
    }

    nav#navigation .close-menu,
    nav#navigation .open-menu,
    nav#navigation .social-links {
        display: none;
    }

    nav#navigation .menu {
        display: flex;
        align-items: center;
        justify-content: space-between;
        width: 60%;

        /* dica: se os elementos nao se posicionam depois de dar um display flex e justify-content: space-between, é porque a largura da caixa está limitada ao seu conteúdo, por tanto se deve aumentar o conteúdo (de preferencia com % de unidade já que é uma unidade flexível)  */
    }

    nav#navigation .menu ul:nth-child(1) {
        display: flex;
        gap: 3.2rem;
    }

    nav#navigation .menu ul li a {
        color: var(--primary-color);
        opacity: 0.7;
    }

    nav#navigation .menu a.button {   
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 1rem 2.4rem;

        border: 1px solid var(--primary-color);
        border-radius: 4rem;

        color: var(--primary-color);

        font-weight: 700;
        font-size: 1.4rem;
        line-height: 1.8rem;
        text-transform: uppercase;
    }

    nav#navigation .menu a.button:hover {
        background-color: var(--primary-color);
        border: none;
        color:white;
    }

    nav#navigation.scroll .menu ul li a {
        color: var(--brand-light-2);
        opacity: 0.6;
    }

    nav#navigation.scroll .menu a.button {
        border-color: white;
        color: white;
    }

    nav#navigation .menu li a.active,
    nav#navigation .menu li a:hover {
        opacity: 1;
        font-weight: 700;
    }

    nav#navigation .menu li a {
        transition: opacity .4s;
    }

    nav#navigation .menu li a::after {
        content: ''; /*este after vai ser a minha bordinha debaixo do link*/
        width: 0;
        height: 2px;
        background-color: var(--primary-color);

        position: relative;
        bottom: -2rem;
        left: -0.5rem;
        
        display: block;

        transition: width 0.2s;
    }
    
    nav#navigation.scroll .menu li a::after {
        background-color: white;
    }
    
    nav#navigation .menu li a.active::after,
    nav#navigation .menu li a:hover::after {
        padding-inline: 0.8rem;
        width: 100%;
    }

    nav#navigation.scroll .menu li a.active,
    nav#navigation.scroll .menu li a:hover {
        opacity: 1;
    }

    nav#navigation.scroll .menu a.button.active,
    nav#navigation.scroll .menu a.button:hover {
        background-color: var(--primary-color);
        filter: brightness(1.3);
        border: none;

        transition: 0.4s;
    }

     /* ========HOME=================================== */

    #home::before {
        height: calc(96% - var(--nav-height));
    }
     #home {
         padding-top: var(--nav-height);
     }
     #home .wrapper {
         grid-template-columns: 60.5rem 1fr;
         grid-template-areas: 
         'A B'
         'C C';
     }

     #home .col-a {
         text-align: left;
         align-self: center; /*propriedade dentro do grid para pegar o próprio elemento e alinhar ele*/
     }


    #home h1 {
        font-size: 5.2rem;
    }

    #home .content p {
        font-size: 1.8rem;
    }

    #home .stats {
        grid-area: C;

        flex-direction: row;
        padding: 6rem;
        gap: 0;
    }

    /* leitura dos selecores: pegar  no home, o stats, e dentro do stat, ver qual(quais) stat tem um stat anterior a ele */
    /*isso aqui será as linhas verdes verticais entre cada stat*/
    #home .stats .stat + .stat {
        border-left: 1px solid var(--primary-color);
    }

    #home .stats .stat {
        flex: 1; /*para deixar as casixas iguais, cada um dos filhos do flex recebe este valor e preenche igual, deixando-os iguais */
    }

    #home .button {
        margin: 0;
    }

    #home img {
        width: 42rem;
    }

    /* ========SERVICES=================================== */
    #services h2 {
        width: 47rem;
        margin-inline: auto;
    }

    #services .cards {
        flex-direction: row;
        flex-wrap: wrap;
        gap: 4rem;
    }

    #services .card {
        width: 30%;
        flex-grow: 1; /*aumente o suficiente para preencher o espaco restante*/
    }

    /* ========ABOUT=================================== */
    #about .wrapper {
        grid-template-columns: 48rem 1fr;
        grid-template-areas: 'B A';
        gap: 6.7rem;
    }

    #about .col-a {
        align-self: center;
    }

    #about .content p {
        margin-bottom: 0;
    }

    /* ========CONTACT=================================== */
    #contact .wrapper {
        grid-template-columns: 1fr 57.5rem;
        grid-template-areas: 'A B';
        gap: 6.7rem;
    }
    #contact h2 {
        width: 40.4rem;
    }

    /* ========FOOTER=================================== */
    footer {
        padding-block: 8rem;
    }

    footer .wrapper {
        grid-template-columns:  1fr 1fr;
        grid-template-areas: 'A B';
    }

    footer .col-a {
        align-self: center;
    }

    footer .col-b {
        align-self: center;
        justify-self: flex-end; /*align-self e o justify-self sao muito parecidos as propriedades do display flex, só que neste caso, será para o display grid.*/
    }

    footer p {
        margin-bottom: 0;
    }
}
